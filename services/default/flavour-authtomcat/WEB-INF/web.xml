<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright - The University of Edinburgh 2015 -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">


    <!-- General description of your web application -->

    <display-name>Web Based Accounting Application</display-name>
    <description>
      An web application for HPC accounting
    </description>

 

    <!-- Note that AppContext also picks up parameters from WEB-INF/service-config.properties, 
         as well as InitParameters specified here.
    -->

    <!-- 
    -->


<filter>
  <filter-name>Fault-filter</filter-name>
  <filter-class>uk.ac.ed.epcc.webapp.servlet.ErrorFilter</filter-class>
   
</filter>
		



<filter-mapping>
  <filter-name>Fault-filter</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>

<listener>
<listener-class>uk.ac.ed.epcc.webapp.servlet.Log4JWebappContextListener</listener-class>
</listener>

<servlet>
  <description>Allows authenticated first time visitors to register</description>
  <servlet-name>RegisterServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.RegisterServlet</servlet-class>
</servlet>
<servlet>
  <description>Allows password based logins</description>
  <servlet-name>LoginServlet</servlet-name> 
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.LoginServlet</servlet-class>
</servlet>
<servlet>
  <description>Allows new users to register when using password authentication</description>
  <servlet-name>SignupServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.SignupServlet</servlet-class>
</servlet>
<servlet>
  <description>User authorised operations</description>
  <servlet-name>UserServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.UserServlet</servlet-class>
</servlet>
<servlet>
  <description>Uploads accounting data</description>
  <servlet-name>UploadServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webacct.servlet.UploadServlet</servlet-class>
</servlet>
<servlet>
  <description>SU servlet</description>
  <servlet-name>BecomeUserServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.BecomeUserServlet</servlet-class>
</servlet>
<servlet>
  <description>Servlet for serving data</description>
  <servlet-name>DataServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.ServeDataServlet</servlet-class>
</servlet>
<servlet>
  <description>general object creation and update</description>
  <servlet-name>ReportServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.safe.accounting.servlet.ReportServlet</servlet-class>
</servlet>
<servlet>
  <description>Allows users to perform transitions</description>
  <servlet-name>TransitionServlet</servlet-name>
  <servlet-class>uk.ac.ed.epcc.webapp.servlet.TransitionServlet</servlet-class>
</servlet>
<servlet-mapping>
<servlet-name>RegisterServlet</servlet-name>
<url-pattern>/RegisterServlet</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>LoginServlet</servlet-name>
<url-pattern>/LoginServlet</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>SignupServlet</servlet-name>
<url-pattern>/SignupServlet</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>UserServlet</servlet-name>
<url-pattern>/UserServlet</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>UploadServlet</servlet-name>
<url-pattern>/UploadServlet</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>BecomeUserServlet</servlet-name>
<url-pattern>/BecomeUserServlet/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>ReportServlet</servlet-name>
<url-pattern>/ReportServlet/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>DataServlet</servlet-name>
<url-pattern>/Data/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
<servlet-name>TransitionServlet</servlet-name>
<url-pattern>/TransitionServlet/*</url-pattern>
</servlet-mapping>
    <!-- Define the default session timeout for your application,
         in minutes.  From a servlet or JSP page, you can modify
         the timeout for a particular session dynamically by using
         HttpSession.getMaxInactiveInterval(). -->
    <session-config>
      <session-timeout>30</session-timeout>    <!-- 30 minutes -->
    </session-config>

 
    <welcome-file-list>
        <welcome-file>main.jsp</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
  <error-page>
  	<exception-type>java.lang.Exception</exception-type>
  	<location>/errorpage.jsp</location>
  </error-page>
 <error-page>
  	<error-code>404</error-code>
  	<location>/errorpage.jsp</location>
  </error-page>
  <error-page>
  	<error-code>500</error-code>
  	<location>/errorpage.jsp</location>
  </error-page>

  <resource-ref>
      <description>DB Connection</description>
      <res-ref-name>jdbc/WebacctDB</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
  </resource-ref>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Upload servlet </web-resource-name>
			<url-pattern>/UploadServlet/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
			<role-name>upload</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Application </web-resource-name>
			<url-pattern>/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
			<role-name>user</role-name>
    </auth-constraint>
  </security-constraint>
  <!-- Define the Login Configuration for this Application -->
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>WEBAPP</realm-name>
  </login-config>
<security-role><description>Data upload role</description><role-name>upload</role-name></security-role>
<security-role><description>Any user of the system</description><role-name>user</role-name></security-role>
  
</web-app>